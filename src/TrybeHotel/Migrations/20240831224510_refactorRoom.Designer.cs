// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrybeHotel.Repository;

#nullable disable

namespace TrybeHotel.Migrations
{
    [DbContext(typeof(TrybeHotelContext))]
    [Migration("20240831224510_refactorRoom")]
    partial class refactorRoom
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrybeHotel.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestQuant")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            CheckIn = new DateTime(2024, 8, 31, 19, 45, 10, 155, DateTimeKind.Local).AddTicks(9844),
                            CheckOut = new DateTime(2024, 9, 1, 19, 45, 10, 155, DateTimeKind.Local).AddTicks(9873),
                            GuestQuant = 2,
                            RoomId = 1,
                            UserId = 1
                        },
                        new
                        {
                            BookingId = 2,
                            CheckIn = new DateTime(2024, 8, 31, 19, 45, 10, 155, DateTimeKind.Local).AddTicks(9878),
                            CheckOut = new DateTime(2024, 9, 1, 19, 45, 10, 155, DateTimeKind.Local).AddTicks(9879),
                            GuestQuant = 1,
                            RoomId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TrybeHotel.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            Name = "São Paulo",
                            State = "SP"
                        },
                        new
                        {
                            CityId = 2,
                            Name = "Rio de Janeiro",
                            State = "RJ"
                        });
                });

            modelBuilder.Entity("TrybeHotel.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelId");

                    b.HasIndex("CityId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            Address = "Largo do Arouche, 150",
                            CityId = 1,
                            Image = "https://cf.bstatic.com/xdata/images/hotel/max1024x768/17623873.jpg?k=b952cb80dc3ecc4df3b662e9544c8ef0a2cfd480c92d3654d86c9254d7bcff4e&o=&hp=1;https://cf.bstatic.com/xdata/images/hotel/max1024x768/44459472.jpg?k=072ac9d3e1405cd3e8a922cddf710f955c912da68ac3433acfed8f73adc9c513&o=&hp=1",
                            Name = "San Raphael Hotel"
                        },
                        new
                        {
                            HotelId = 2,
                            Address = "Rua Senador Dantas, 25",
                            CityId = 2,
                            Image = "https://cf.bstatic.com/xdata/images/hotel/max1024x768/5139993.jpg?k=19d18100c9cfd4fce562972ace815dbe9e6b91d88d400d10be3510a64ec616e8&o=&hp=1;https://cf.bstatic.com/xdata/images/hotel/max1024x768/46891345.jpg?k=b65862e317f0e83af7026b60d73c2b52925a098f1bfdbc2d4a4b5f24a0fff585&o=&hp=1",
                            Name = "Hotel Atlântico Business Centro"
                        });
                });

            modelBuilder.Entity("TrybeHotel.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KingSizeBeds")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("SingleSizeBeds")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Capacity = 2,
                            HotelId = 1,
                            Image = "https://cf.bstatic.com/xdata/images/hotel/max1024x768/360677173.jpg?k=c1083d43ddb2d9415b25304a6f7cd78100e7c737eaacd33273f67b3c904c4a5c&o=&hp=1;https://cf.bstatic.com/xdata/images/hotel/max1024x768/266289735.jpg?k=291d57f71acd1295c410553c4d052f0e299c0f2f48bb83595cf7bf2b97238513&o=&hp=1",
                            KingSizeBeds = 1,
                            Name = "Quarto 1",
                            SingleSizeBeds = 0
                        },
                        new
                        {
                            RoomId = 2,
                            Capacity = 3,
                            HotelId = 2,
                            Image = "https://cf.bstatic.com/xdata/images/hotel/max1024x768/46891345.jpg?k=b65862e317f0e83af7026b60d73c2b52925a098f1bfdbc2d4a4b5f24a0fff585&o=&hp=1;https://cf.bstatic.com/xdata/images/hotel/max1024x768/46903249.jpg?k=f8fb07eb763acad38a4804b58bc05f3dc285d89338d1d6ac02b31e6f35bd5a1e&o=&hp=1",
                            KingSizeBeds = 1,
                            Name = "Quarto 2",
                            SingleSizeBeds = 1
                        });
                });

            modelBuilder.Entity("TrybeHotel.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "example@example",
                            Name = "User 1",
                            Password = "123",
                            UserType = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "example2@example",
                            Name = "User 2",
                            Password = "123",
                            UserType = "client"
                        });
                });

            modelBuilder.Entity("TrybeHotel.Models.Booking", b =>
                {
                    b.HasOne("TrybeHotel.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrybeHotel.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrybeHotel.Models.Hotel", b =>
                {
                    b.HasOne("TrybeHotel.Models.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TrybeHotel.Models.Room", b =>
                {
                    b.HasOne("TrybeHotel.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TrybeHotel.Models.City", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("TrybeHotel.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("TrybeHotel.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("TrybeHotel.Models.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
