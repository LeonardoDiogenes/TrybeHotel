// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrybeHotel.Repository;

#nullable disable

namespace TrybeHotel.Migrations
{
    [DbContext(typeof(TrybeHotelContext))]
    [Migration("20240816231126_RefactorImageInRoomModel")]
    partial class RefactorImageInRoomModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrybeHotel.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestQuant")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            CheckIn = new DateTime(2024, 8, 16, 20, 11, 26, 234, DateTimeKind.Local).AddTicks(624),
                            CheckOut = new DateTime(2024, 8, 17, 20, 11, 26, 234, DateTimeKind.Local).AddTicks(660),
                            GuestQuant = 2,
                            RoomId = 1,
                            UserId = 1
                        },
                        new
                        {
                            BookingId = 2,
                            CheckIn = new DateTime(2024, 8, 16, 20, 11, 26, 234, DateTimeKind.Local).AddTicks(668),
                            CheckOut = new DateTime(2024, 8, 17, 20, 11, 26, 234, DateTimeKind.Local).AddTicks(668),
                            GuestQuant = 1,
                            RoomId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TrybeHotel.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            Name = "São Paulo",
                            State = "SP"
                        },
                        new
                        {
                            CityId = 2,
                            Name = "Rio de Janeiro",
                            State = "RJ"
                        });
                });

            modelBuilder.Entity("TrybeHotel.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelId");

                    b.HasIndex("CityId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            Address = "Endereço 1",
                            CityId = 1,
                            Image = "https://via.placeholder.com/150;https://via.placeholder.com/200",
                            Name = "Hotel 1"
                        },
                        new
                        {
                            HotelId = 2,
                            Address = "Endereço 2",
                            CityId = 2,
                            Image = "https://via.placeholder.com/150;https://via.placeholder.com/200",
                            Name = "Hotel 2"
                        });
                });

            modelBuilder.Entity("TrybeHotel.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Capacity = 2,
                            HotelId = 1,
                            Image = "https://via.placeholder.com/150;https://via.placeholder.com/200",
                            Name = "Quarto 1"
                        },
                        new
                        {
                            RoomId = 2,
                            Capacity = 3,
                            HotelId = 2,
                            Image = "https://via.placeholder.com/150;https://via.placeholder.com/200",
                            Name = "Quarto 2"
                        });
                });

            modelBuilder.Entity("TrybeHotel.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "example@example",
                            Name = "User 1",
                            Password = "123",
                            UserType = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "example2@example",
                            Name = "User 2",
                            Password = "123",
                            UserType = "client"
                        });
                });

            modelBuilder.Entity("TrybeHotel.Models.Booking", b =>
                {
                    b.HasOne("TrybeHotel.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrybeHotel.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrybeHotel.Models.Hotel", b =>
                {
                    b.HasOne("TrybeHotel.Models.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TrybeHotel.Models.Room", b =>
                {
                    b.HasOne("TrybeHotel.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TrybeHotel.Models.City", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("TrybeHotel.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("TrybeHotel.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("TrybeHotel.Models.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
